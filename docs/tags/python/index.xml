<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on WM Seismic Solutions</title>
    <link>https://waynegm.github.io/tags/python/</link>
    <description>Recent content in python on WM Seismic Solutions</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://waynegm.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Visual Studio Code with OpendTect</title>
      <link>https://waynegm.github.io/blog/vscode-python-setup/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://waynegm.github.io/blog/vscode-python-setup/</guid>
      <description>&lt;p&gt;In this post I show you how to set up and use the free &lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt; editor with OpendTect for interactive
computation using Python Jupyter Notebooks. If you are have installed the OpendTect Machine Learning Python environments you can
create and edit Python Jupyter Notebooks using Visual Studio Code without modifying the installed environment provided VS Code is run from within
OpendTect. The approach described in this post might assist users in strictly controlled IT settings get up and running using Jupyter Notebooks.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python External Attributes - Debugging</title>
      <link>https://waynegm.github.io/blog/python-external-attributes-debugging/</link>
      <pubDate>Fri, 08 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://waynegm.github.io/blog/python-external-attributes-debugging/</guid>
      <description>&lt;p&gt;Because the Python [../plugins/ExternalAttrib] script is running in a process started by the OpendTect application most standard methods to examine the script as it runs, eg using the standard Python debugger &lt;a href=&#34;https://docs.python.org/3/library/pdb.html&#34;&gt;pdb&lt;/a&gt;, are not available.&lt;/p&gt;
&lt;p&gt;A solution is to use the &lt;a href=&#34;https://github.com/romanvm/python-web-pdb&#34;&gt;Web-PDB&lt;/a&gt; Python module which allows the Python script to be debugged remotely in a web-browser.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python External Attribute - Logging</title>
      <link>https://waynegm.github.io/blog/python-external-attributes-logging/</link>
      <pubDate>Wed, 06 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://waynegm.github.io/blog/python-external-attributes-logging/</guid>
      <description>&lt;p&gt;It is possible to write information to the OpendTect logfile from inside a Python [../plugins/ExternalAttrib] script.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Anatomy of a Python External Attribute</title>
      <link>https://waynegm.github.io/blog/python-external-attributes-anatomy/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://waynegm.github.io/blog/python-external-attributes-anatomy/</guid>
      <description>&lt;p&gt;This article will review the structure of a simple Python [../plugins/ExternalAttrib] script, &lt;a href=&#34;https://github.com/waynegm/OpendTect-External-Attributes/blob/master/Python_3/DipAndAzimuth/ex_dip.py&#34;&gt;ex_dip.py&lt;/a&gt;, which converts inline and crossline dip to true dip and dip azimuth. It is an example of multi attribute, single trace input and output. Some basic understanding of &lt;a href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt; and &lt;a href=&#34;http://www.numpy.org/&#34;&gt;Numpy&lt;/a&gt; is assumed.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
